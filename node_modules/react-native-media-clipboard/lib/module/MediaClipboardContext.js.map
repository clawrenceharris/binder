{"version":3,"sources":["MediaClipboardContext.tsx"],"names":["React","MediaClipboard","listenToClipboardChanges","stopListeningToClipboardChanges","listenToClipboardRemove","stopListeningToClipboardRemove","getClipboardMediaSource","ClipboardContext","createContext","clipboard","mediaSource","ClipboardProvider","Component","constructor","props","then","setState","contextValue","buildContextValue","state","Object","keys","length","componentDidMount","handleClipboardChange","hasImages","updateMediaSource","componentWillUnmount","render","children"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,cADF,EAGEC,wBAHF,EAIEC,+BAJF,EAKEC,uBALF,EAMEC,8BANF,EAOEC,uBAPF,QASO,kBATP;AAgBA,OAAO,MAAMC,gBAAgB,GAAGP,KAAK,CAACQ,aAAN,CAA+B;AAC7DC,EAAAA,SAAS,EAAER,cAAc,CAACQ,SADmC;AAE7DC,EAAAA,WAAW,EAAET,cAAc,CAACS,WAAf,IAA8B;AAFkB,CAA/B,CAAzB;AAWP,OAAO,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAGL;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAgC;AACzC,UAAMA,KAAN,EADyC,CAGzC;;AAHyC,mDAyBlBL,SAAD,IAAkC;AACxDH,MAAAA,uBAAuB,GAAGS,IAA1B,CAA+BL,WAAW,IAAI;AAC5C;AACA,aAAKM,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAEN,iBAAiB,CAACO,iBAAlB,CACZT,SADY,EAEZC,WAAW,IAAI,IAFH;AADF,SAAd;AAMD,OARD;AASD,KAnC0C;;AAAA,+CAmDvB,MAAM;AACxBJ,MAAAA,uBAAuB,GAAGS,IAA1B,CAA+BL,WAAW,IAAI;AAC5C;AACA,aAAKM,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAEN,iBAAiB,CAACO,iBAAlB,EACZ;AACA,eAAKC,KAAL,CAAWF,YAAX,CAAwBR,SAFZ,EAGZC,WAHY;AADF,SAAd;AAOD,OATD;AAUD,KA9D0C;;AAIzC,SAAKS,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAEN,iBAAiB,CAACO,iBAAlB,CACZjB,cAAc,CAACQ,SADH,EAEZR,cAAc,CAACS,WAAf,IAA8B,IAFlB;AADH,KAAb;AAMD;;AAED,SAAOQ,iBAAP,CACET,SADF,EAEEC,WAFF,EAGa;AACX,WAAO;AACLD,MAAAA,SADK;AAELC,MAAAA,WAAW,EACT,CAACA,WAAD,IAAgBU,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAAzB,KAAoC,CAApD,GACI,IADJ,GAEIZ;AALD,KAAP;AAOD;;AAcDa,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,wBAAwB,CAAC,KAAKsB,qBAAN,CAAxB;AACApB,IAAAA,uBAAuB,CAAC,KAAKoB,qBAAN,CAAvB;;AAEA,SACE;AACA,SAAKL,KAAL,CAAWF,YAAX,CAAwBR,SAAxB,CAAkCgB,SAAlC,IACA;AACA,KAAC,KAAKN,KAAL,CAAWF,YAAX,CAAwBP,WAJ3B,EAKE;AACA,WAAKgB,iBAAL;AACD;AACF;;AAeDC,EAAAA,oBAAoB,GAAG;AACrBxB,IAAAA,+BAA+B,CAAC,KAAKqB,qBAAN,CAA/B;AACAnB,IAAAA,8BAA8B,CAAC,KAAKmB,qBAAN,CAA9B;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKf,KAA1B;AACA,WACE;AACA,0BAAC,gBAAD,CAAkB,QAAlB;AAA2B,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF;AAA7C,SACGY,QADH;AAFF;AAMD;;AA/ED","sourcesContent":["import * as React from \"react\";\nimport {\n  MediaClipboard,\n  ClipboardResponse,\n  listenToClipboardChanges,\n  stopListeningToClipboardChanges,\n  listenToClipboardRemove,\n  stopListeningToClipboardRemove,\n  getClipboardMediaSource,\n  MediaSource\n} from \"./MediaClipboard\";\n\nexport type Clipboard = {\n  clipboard: ClipboardResponse;\n  mediaSource: MediaSource | null;\n};\n\nexport const ClipboardContext = React.createContext<Clipboard>({\n  clipboard: MediaClipboard.clipboard,\n  mediaSource: MediaClipboard.mediaSource || null\n});\n\nexport type ClipboardProviderState = {\n  contextValue: Clipboard;\n};\n\nexport type ClipboardProviderProps = { children: any };\n\nexport class ClipboardProvider extends React.Component<\n  ClipboardProviderProps,\n  ClipboardProviderState\n> {\n  constructor(props: ClipboardProviderProps) {\n    super(props);\n\n    // @ts-ignore\n    this.state = {\n      contextValue: ClipboardProvider.buildContextValue(\n        MediaClipboard.clipboard,\n        MediaClipboard.mediaSource || null\n      )\n    };\n  }\n\n  static buildContextValue(\n    clipboard: ClipboardResponse,\n    mediaSource: MediaSource | null\n  ): Clipboard {\n    return {\n      clipboard,\n      mediaSource:\n        !mediaSource || Object.keys(mediaSource).length === 0\n          ? null\n          : mediaSource\n    };\n  }\n\n  handleClipboardChange = (clipboard: ClipboardResponse) => {\n    getClipboardMediaSource().then(mediaSource => {\n      // @ts-ignore\n      this.setState({\n        contextValue: ClipboardProvider.buildContextValue(\n          clipboard,\n          mediaSource || null\n        )\n      });\n    });\n  };\n\n  componentDidMount() {\n    listenToClipboardChanges(this.handleClipboardChange);\n    listenToClipboardRemove(this.handleClipboardChange);\n\n    if (\n      // @ts-ignore\n      this.state.contextValue.clipboard.hasImages &&\n      // @ts-ignore\n      !this.state.contextValue.mediaSource\n    ) {\n      this.updateMediaSource();\n    }\n  }\n\n  updateMediaSource = () => {\n    getClipboardMediaSource().then(mediaSource => {\n      // @ts-ignore\n      this.setState({\n        contextValue: ClipboardProvider.buildContextValue(\n          // @ts-ignore\n          this.state.contextValue.clipboard,\n          mediaSource\n        )\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    stopListeningToClipboardChanges(this.handleClipboardChange);\n    stopListeningToClipboardRemove(this.handleClipboardChange);\n  }\n\n  render() {\n    // @ts-ignore\n    const { children } = this.props;\n    return (\n      // @ts-ignore\n      <ClipboardContext.Provider value={this.state.contextValue}>\n        {children}\n      </ClipboardContext.Provider>\n    );\n  }\n}\n"]}